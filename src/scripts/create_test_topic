#!/usr/bin/python3
# -*- coding: utf-8 -*-

""" Create a topic for testing.
    Will also create a course to put it in.
    Returns the topic ID of the topic

    create_test_topic  <coursename> <topicname>

    eg.    create_test_topic TEST101 Imports
"""

import sys
import os

# find installed copy of OASIS
UPTWO=os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
APPDIR=None

if "OASISLIB" in os.environ:
   APPDIR = os.environ["OASISLIB"]
elif os.path.isdir("/opt/oasisqe/3.9/src/oasis"):
   APPDIR = "/opt/oasisqe/3.9/src"
elif os.path.isdir("/opt/oasisqe/3.9/oasis"):
   APPDIR = "/opt/oasisqe/3.9"
elif os.path.isdir("%s/%s"%(UPTWO,"/oasis")):
   APPDIR = UPTWO
elif os.path.isdir("%s/%s"%(UPTWO,"/src/oasis")):
   APPDIR = UPTWO+"/src"

if not APPDIR:
    print("Unable to find installed OASIS code, normally at /opt/oasisqe/3.9/src")
    print("You can specify it in the OASIS lib environment variable on the commandline: ")
    print("          OASISLIB=/opt/oasisqe/3.9/src oasisdb")
    exit(1)

print(("using copy of OASIS installed at %s" % APPDIR))
sys.path.append(APPDIR)

from oasis.lib import Topics, Users, Courses


def create_topic(course, topicname):
    """ Create or return the topic.
    """
    return Topics.create(course['id'], topicname, 3, 1)


def create_course(coursename):
    """ Find or create the course. Returns course dict.
    """
    course = Courses.get_course_by_name(coursename)
    if course:
        print(("Course %(name)s found: %(id)s" % course))
    else:
        cid = Courses.create(coursename, "Testing", Users.uid_by_uname('admin'), 1)
        course = Courses.get_course(cid)
        coursetemplate = 'casual'
        courserepeat = 1  # indefinite 
        Courses.create_config(cid, coursetemplate, courserepeat)
        if not course:
            print(("Failed to create course %s. Unexpected." % coursename))
            sys.exit(0)
        print(("Course created: %(id)s" % course))
    return course


if len(sys.argv) < 3:
    print("Usage: ")
    print("    create_test_topic <coursename> <topicname>")
    sys.exit(1)

# sys.argv[1]    # coursename
# sys.argv[2]    # topicname

_course = create_course(sys.argv[1])
_topic = create_topic(_course, sys.argv[2])
print(("Topic %s created" % _topic))
